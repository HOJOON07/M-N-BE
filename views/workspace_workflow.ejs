<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <div class="workspace">
    <h1 class="workspace_name">
        워크 스페이스 이름 : <%= selectWS.workspace_name %>
    </h1>
    <div>
      <h2 class="workspace_workflow">
        워크플로우 
      </h2>
      <div>
        <h3>RequestList</h3>
        <ul class="workflow_requestlist">
          <% if (selectWS.workflow.requestList.length > 0) { %>
          <% for(let i=0; i < selectWS.workflow.requestList.length; i++) { %>
          <h3>requestList <%=i%>
            <button onclick="deleteRequestList('<%=selectWS._id%>','<%=selectWS.workflow.requestList[i].id%>')">삭제</button></h3>
          <ul>
            <li>requestList id : <%=selectWS.workflow.requestList[i].id%></li>
            <li class="todoList_content">requestList 내용 : <%=selectWS.workflow.requestList[i].content%>
              <form action="/workspace/<%=selectWS._id%>/<%=selectWS.workflow.requestList[i].id%>/updaterequestlist" method="POST" class="board_form">
                <input name="modifyContent"></input>
                <button type="submit">수정하기</button>
              </form>
            </li>
            <li>requestList 생성일 : <%=selectWS.workflow.requestList[i].createDate%></li>
            <li>requestList 마감일 : <%=selectWS.workflow.requestList[i].endDate%></li>
            <li>requestList 중요도 : <%=selectWS.workflow.requestList[i].importance%></li>
          </ul>
          <% } %>
        </ul>
        <% } else { %>
          <div class="no">todo가 없습니다.</div>
        <% } %>
        <hr/>
      </div>
      <div>
        <h3>InProgressList</h3>
        <ul class="workflow_inprogresslist">
          <% if (selectWS.workflow.inProgressList.length > 0) { %>
          <% for(let i=0; i < selectWS.workflow.inProgressList.length; i++) { %>
          <h3>inProgressList<%=i%><button onclick="deleteinprogresslist('<%=selectWS._id%>','<%=selectWS.workflow.inProgressList[i].id%>')">삭제</button></h3>
          <ul>
            <li>inProgressList 내용 : <%=selectWS.workflow.inProgressList[i].content%>
              <form action="/workspace/<%=selectWS._id%>/<%=selectWS.workflow.inProgressList[i].id%>/updateinprogresslist" method="POST" class="board_form">
              <input name="modifyContent"></input>
              <button type="submit">수정하기</button>
              </form>
            </li>
            <li>inProgressList 생성일 : <%=selectWS.workflow.inProgressList[i].createDate%></li>
            <li>inProgressList 마감일 : <%=selectWS.workflow.inProgressList[i].endDate%></li>
            <li>inProgressList 중요도 : <%=selectWS.workflow.inProgressList[i].importance%></li>
          </ul>
          <% } %>
        </ul>
        <% } else { %>
          <div class="no">inProgressList가 없습니다.</div>
        <% } %>
        <hr/>
      </div>
    </div>
  </div>
  <form action="/workspace/<%=selectWS._id%>/addrequestlist" method="POST" class="board_form">
    <div class="form_workflow-name">
      <h3>RequestList 추가</h3>
      내용 : <input type="text" name="requestList_content" required></input>
      <br/>
      종료일 : <input type="date" name="requestList_endDate" required></input>
      <br/>
      중요도 : <input type="text" name="requestList_importance" required></input>
    </div>
    <button type="submit">Request 추가</button>
  </form>
  <form action="/workspace/<%=selectWS._id%>/addinprogresslist" method="POST" class="board_form">
    <div class="form_workflow-name">
      <h3>InProgress List 추가</h3>
      내용 : <input type="text" name="inprogressList_content" required></input>
      <br>
      종료일 : <input type="date" name="inprogressList_endDate" required></input>
      <br/>
      중요도 : <input type="text" name="inprogressList_importance" required></input>
    </div>
    <button type="submit">InProgress 추가</button>
  </form>

</body>
</html>

<script defer>

  const updateRequestList = async(id, todoId) => {
    try{
      const res = await fetch(`http://localhost:8001/workspace/${id}/${todoId}/updaterequestlist`,{
        method:'POST',
        headers:{
          'Content-type': 'application/json'
        },
      })
      if(res.status ===200) location.reload();
    }catch(err){
      console.log(err);
    }
  }
  const deleteRequestList = async(id, todoId) => {
    try{
      const res = await fetch(`http://localhost:8001/workspace/${id}/${todoId}/deleterequestlist`,{
        method: 'POST',
        headers: {
      'Content-type': 'application/json',},
      })
      if(res.status ===200) location.reload();
    }catch(err) {
      console.log(err);
    }
  }
  const deleteinprogresslist = async(id, inprogressId) => {
    try{
      const res = await fetch(`http://localhost:8001/workspace/${id}/${inprogressId}/deleteinprogresslist`,{
        method: 'POST',
        headers: {
      'Content-type': 'application/json',},
      })
      if(res.status ===200) location.reload();
    }catch(err) {
      console.log(err);
    }
  }
  const deletedonelist = async(id, doneId) => {
    try{
      const res = await fetch(`http://localhost:8001/workspace/${id}/${doneId}/deletedonelist`,{
        method: 'POST',
        headers: {
      'Content-type': 'application/json',},
      })
      if(res.status ===200) location.reload();
    }catch(err) {
      console.log(err);
    }
  }
</script>